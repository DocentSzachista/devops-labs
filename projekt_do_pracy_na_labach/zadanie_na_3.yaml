apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-04-15T05:49:54Z"
    generation: 1
    labels:
      app: hello-node
    name: hello-node
    namespace: default
    resourceVersion: "1475"
    uid: e441370c-e0f2-4c6d-bd71-423612aa05c2
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: hello-node
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: hello-node
      spec:
        containers:
        - command:
          - /agnhost
          - netexec
          - --http-port=808
          image: registry.k8s.io/e2e-testimages/agnhost:2.39
          imagePullPolicy: IfNotPresent
          name: agnhost
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    conditions:
    - lastTransitionTime: "2024-04-15T05:49:54Z"
      lastUpdateTime: "2024-04-15T05:49:54Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    - lastTransitionTime: "2024-04-15T05:59:54Z"
      lastUpdateTime: "2024-04-15T05:59:54Z"
      message: ReplicaSet "hello-node-5c4454f4b5" has timed out progressing.
      reason: ProgressDeadlineExceeded
      status: "False"
      type: Progressing
    observedGeneration: 1
    replicas: 1
    unavailableReplicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-04-15T10:41:39Z"
    generation: 2
    labels:
      app: nginx-deployment
    name: nginx-deployment
    namespace: default
    resourceVersion: "12051"
    uid: f313f15f-f2d1-49eb-92af-336365a5727b
  spec:
    progressDeadlineSeconds: 600
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: nginx-deployment
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: nginx-deployment
      spec:
        containers:
        - image: nginx
          imagePullPolicy: Always
          name: nginx
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 3
    conditions:
    - lastTransitionTime: "2024-04-15T10:41:39Z"
      lastUpdateTime: "2024-04-15T10:41:42Z"
      message: ReplicaSet "nginx-deployment-6d6565499c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2024-04-15T10:44:31Z"
      lastUpdateTime: "2024-04-15T10:44:31Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 2
    readyReplicas: 3
    replicas: 3
    updatedReplicas: 3
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"backend-service","namespace":"default"},"spec":{"ports":[{"nodePort":30000,"port":80,"targetPort":8000}],"selector":{"app":"backend"},"type":"NodePort"}}
    creationTimestamp: "2024-04-15T10:12:08Z"
    name: backend-service
    namespace: default
    resourceVersion: "9225"
    uid: 8f58935c-ec87-4f20-9076-e0550d16fe28
  spec:
    clusterIP: 10.100.43.23
    clusterIPs:
    - 10.100.43.23
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 30000
      port: 80
      protocol: TCP
      targetPort: 8000
    selector:
      app: backend
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-04-15T05:46:57Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "232"
    uid: e34596f6-0bcf-4506-9531-250b7c56ff6c
  spec:
    clusterIP: 10.96.0.1
    clusterIPs:
    - 10.96.0.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 6443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-04-15T10:24:50Z"
    labels:
      app: nginx-deployment
    name: nginx-deployment
    namespace: default
    resourceVersion: "10334"
    uid: 8ce9bc64-bda1-4ffd-acdd-17ec8dfe80d7
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.98.213.70
    clusterIPs:
    - 10.98.213.70
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 32254
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      app: nginx-deployment
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - hostname: localhost
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-04-15T05:49:54Z"
    generateName: hello-node-5c4454f4b5-
    labels:
      app: hello-node
      pod-template-hash: 5c4454f4b5
    name: hello-node-5c4454f4b5-tjgjc
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: hello-node-5c4454f4b5
      uid: 857ea700-5e51-4ea8-b619-b71b137349af
    resourceVersion: "11974"
    uid: a0ecf3ce-2c0c-4610-9125-650eee6204ec
  spec:
    containers:
    - command:
      - /agnhost
      - netexec
      - --http-port=808
      image: registry.k8s.io/e2e-testimages/agnhost:2.39
      imagePullPolicy: IfNotPresent
      name: agnhost
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b7l2c
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: docker-desktop
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-b7l2c
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-04-15T05:49:56Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-04-15T05:49:54Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-04-15T05:49:54Z"
      message: 'containers with unready status: [agnhost]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-04-15T05:49:54Z"
      message: 'containers with unready status: [agnhost]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-04-15T05:49:54Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - image: registry.k8s.io/e2e-testimages/agnhost:2.39
      imageID: ""
      lastState: {}
      name: agnhost
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          message: Back-off pulling image "registry.k8s.io/e2e-testimages/agnhost:2.39"
          reason: ImagePullBackOff
    hostIP: 192.168.65.3
    hostIPs:
    - ip: 192.168.65.3
    phase: Pending
    podIP: 10.1.0.6
    podIPs:
    - ip: 10.1.0.6
    qosClass: BestEffort
    startTime: "2024-04-15T05:49:54Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-04-15T10:44:28Z"
    generateName: nginx-deployment-6d6565499c-
    labels:
      app: nginx-deployment
      pod-template-hash: 6d6565499c
    name: nginx-deployment-6d6565499c-8zqwg
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-deployment-6d6565499c
      uid: 97088c5f-278f-4f38-85fb-867ee2b6f59d
    resourceVersion: "12047"
    uid: d0f4010b-8537-4dbf-88db-7ec6a1f2b6b7
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nlj8s
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: docker-desktop
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-nlj8s
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-04-15T10:44:31Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-04-15T10:44:28Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-04-15T10:44:31Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-04-15T10:44:31Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-04-15T10:44:28Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://68f565f7ea5222abf4783369a4b40152900bad8ac87dec4dc90f08427a96bc89
      image: nginx:latest
      imageID: docker-pullable://nginx@sha256:9ff236ed47fe39cf1f0acf349d0e5137f8b8a6fd0b46e5117a401010e56222e1
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-04-15T10:44:30Z"
    hostIP: 192.168.65.3
    hostIPs:
    - ip: 192.168.65.3
    phase: Running
    podIP: 10.1.0.14
    podIPs:
    - ip: 10.1.0.14
    qosClass: BestEffort
    startTime: "2024-04-15T10:44:28Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-04-15T10:41:39Z"
    generateName: nginx-deployment-6d6565499c-
    labels:
      app: nginx-deployment
      pod-template-hash: 6d6565499c
    name: nginx-deployment-6d6565499c-b2bmf
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-deployment-6d6565499c
      uid: 97088c5f-278f-4f38-85fb-867ee2b6f59d
    resourceVersion: "11757"
    uid: b19afeb8-66a1-4f8d-befb-d3fe342a4813
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qwrvz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: docker-desktop
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-qwrvz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-04-15T10:41:42Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-04-15T10:41:39Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-04-15T10:41:42Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-04-15T10:41:42Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-04-15T10:41:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://3fced8404ce5558c0ee2e94e2aca0560436bdce40efbb92bf4f24a6f269206a5
      image: nginx:latest
      imageID: docker-pullable://nginx@sha256:9ff236ed47fe39cf1f0acf349d0e5137f8b8a6fd0b46e5117a401010e56222e1
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-04-15T10:41:42Z"
    hostIP: 192.168.65.3
    hostIPs:
    - ip: 192.168.65.3
    phase: Running
    podIP: 10.1.0.11
    podIPs:
    - ip: 10.1.0.11
    qosClass: BestEffort
    startTime: "2024-04-15T10:41:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-04-15T10:42:01Z"
    generateName: nginx-deployment-6d6565499c-
    labels:
      app: nginx-deployment
      pod-template-hash: 6d6565499c
    name: nginx-deployment-6d6565499c-fsc48
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-deployment-6d6565499c
      uid: 97088c5f-278f-4f38-85fb-867ee2b6f59d
    resourceVersion: "11816"
    uid: f6470b6f-bb63-476c-9e8d-4b85e732af33
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kcrrv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: docker-desktop
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-kcrrv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-04-15T10:42:03Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-04-15T10:42:01Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-04-15T10:42:03Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-04-15T10:42:03Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-04-15T10:42:01Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://00f9dbb45b3f9ceca3f912ac559dd7cc0aa9e28dd3deab5bd882fdb0417b7bdb
      image: nginx:latest
      imageID: docker-pullable://nginx@sha256:9ff236ed47fe39cf1f0acf349d0e5137f8b8a6fd0b46e5117a401010e56222e1
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-04-15T10:42:03Z"
    hostIP: 192.168.65.3
    hostIPs:
    - ip: 192.168.65.3
    phase: Running
    podIP: 10.1.0.12
    podIPs:
    - ip: 10.1.0.12
    qosClass: BestEffort
    startTime: "2024-04-15T10:42:01Z"
kind: List
metadata:
  resourceVersion: ""
