apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  namespace: lab2
  labels:
    app: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
      role: api
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: backend:latest
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 8000
          volumeMounts:
          - name: pv-backend 
            mountPath: /app
          env:
          - name: DATABASE_URL
            valueFrom:
              configMapKeyRef:
                name: configmap-backend
                key: database-url
          - name: logging
            valueFrom:
              configMapKeyRef:
                name: configmap-backend
                key: logging
          livenessProbe:
            httpGet:
              path: /isAlive
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /isReady
              port: 8000
            initialDelaySeconds: 20
            periodSeconds: 20
            
      volumes:
        - name: pv-backend 
          persistentVolumeClaim:
            claimName: pv-backend-claim

# minikube start
# kubectl create namespace lab2
# kubectl apply -f ./
# minikube service my-service -n lab2
